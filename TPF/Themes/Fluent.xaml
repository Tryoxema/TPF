<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tpf="clr-namespace:TPF.Controls"
                    xmlns:converter="clr-namespace:TPF.Converter"
                    xmlns:animation="clr-namespace:TPF.Animations">
    <!--Brushes-->
    <SolidColorBrush x:Key="HyperlinkBrush" Color="#0066FF"/>
    <SolidColorBrush x:Key="HyperlinkVisitedBrush" Color="#0061A3"/>
    <RadialGradientBrush x:Key="FluentRadialGradient">
        <GradientStop Color="#59FFFFFF" Offset="0.2"/>
        <GradientStop Color="Transparent" Offset="0.9"/>
        <GradientStop Color="Transparent" Offset="1"/>
        <GradientStop Color="Transparent" Offset="1.1"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentPressedRadialGradient" RadiusY="0.3" RadiusX="0.3" Center="0.5 0.5" GradientOrigin="0.5 0.5">
        <GradientStop Offset="1" Color="Transparent"/>
        <GradientStop Offset="0.75" Color="Transparent"/>
        <GradientStop Offset="0.55" Color="#35FFFFFF"/>
        <GradientStop Offset="0.4" Color="#35FFFFFF"/>
        <GradientStop Offset="0.2" Color="Transparent"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentBorderGradient" RadiusX="0.33" RadiusY="1.5">
        <GradientStop Offset="1" Color="Transparent"/>
        <GradientStop Offset="0.4" Color="#7FFFFFFF"/>
    </RadialGradientBrush>

    <!--Converter-->
    <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converter:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <converter:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
    <converter:HueToBrushConverter x:Key="HueToBrushConverter"/>
    <converter:DoubleToThicknessConverter x:Key="DoubleToThicknessConverter"/>
    <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <converter:ThicknessToSpecificThicknessConverter x:Key="ThicknessToSpecificThicknessConverter"/>

    <!--Shadow-->
    <Style TargetType="tpf:Shadow" x:Key="TPF.ShadowStyle">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}"/>
        <Setter Property="ShadowDepth" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(tpf:ShadowElement.ShadowDepth), Mode=OneWay, FallbackValue=Depth0}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style TargetType="tpf:Shadow" BasedOn="{StaticResource TPF.ShadowStyle}"/>

    <!--MaterialControl-->
    <Style TargetType="tpf:MaterialControl" x:Key="TPF.MaterialControlStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment, Mode=OneWay}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAlignment, Mode=OneWay}"/>
        <Setter Property="RippleOpacity" Value="{tpf:ResourceLink Key=RippleOpacity}"/>
        <Setter Property="RippleBrush" Value="{tpf:ResourceLink Key=RippleBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="tpf:MaterialControl">
                    <tpf:SimplePanel Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="{tpf:ResourceLink Key=RippleOpacity}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1" x:Name="PART_MousePressedToNormalScaleXKeyFrame"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1" x:Name="PART_MousePressedToNormalScaleYKeyFrame"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="{tpf:ResourceLink Key=RippleOpacity}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="{tpf:ResourceLink Key=RippleOpacity}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0" EasingFunction="{animation:SineEase EasingMode=EaseOut}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple" To="0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple" To="0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple" To="1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple" To="1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple" To="{tpf:ResourceLink Key=RippleOpacity}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple" To="0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple" To="0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ripple" To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" Panel.ZIndex="0"/>
                        <Canvas x:Name="RippleCanvas" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="{TemplateBinding RippleOpacity}" Panel.ZIndex="1">
                            <Ellipse x:Name="PART_Ripple" Fill="{TemplateBinding RippleBrush}" Width="{TemplateBinding RippleSize}" Height="{TemplateBinding RippleSize}" Opacity="0"
                                     Canvas.Left="{TemplateBinding RippleX}" Canvas.Top="{TemplateBinding RippleY}" RenderTransformOrigin="0.5 0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="0" ScaleY="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Panel.ZIndex="2"/>
                    </tpf:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRippleOnTop" Value="True">
                            <Setter TargetName="RippleCanvas" Property="Panel.ZIndex" Value="3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="tpf:MaterialControl" BasedOn="{StaticResource TPF.MaterialControlStyle}"/>

    <!--FluentControl-->
    <Style TargetType="tpf:FluentControl" x:Key="TPF.FluentControlStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToSpecificThicknessConverter}, ConverterParameter=0\,#\,0\,#}"/>
        <Setter Property="RippleBrush" Value="{StaticResource FluentRadialGradient}"/>
        <Setter Property="BorderGradient" Value="{StaticResource FluentBorderGradient}"/>
        <Setter Property="PressedGradient" Value="{StaticResource FluentPressedRadialGradient}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="tpf:FluentControl">
                    <tpf:SimplePanel Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIn" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.050" />
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:1.0" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:2" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.ScaleX" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" EasingFunction="{animation:SineEase EasingMode=EaseOut}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2" EasingFunction="{animation:SineEase EasingMode=EaseOut}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.ScaleY" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" EasingFunction="{animation:SineEase EasingMode=EaseOut}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2" EasingFunction="{animation:SineEase EasingMode=EaseOut}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseIn">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.220"/>
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.450"/>
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.650"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.ScaleX" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.450"/>
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.500"/>
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.650" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.ScaleY" FillBehavior="HoldEnd">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.450"/>
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.500"/>
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.650" EasingFunction="{animation:SineEase EasingMode=EaseIn}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="PART_Ripple" To="1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="PART_Ripple" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.050"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0" Duration="0:0:0.050"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Canvas x:Name="RippleCanvas" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="0">
                            <Ellipse x:Name="PART_Ripple" Fill="{TemplateBinding RippleBrush}" Width="{TemplateBinding RippleSize}" Height="{TemplateBinding RippleSize}" Opacity="0"
                                     Canvas.Left="{TemplateBinding RippleX}" Canvas.Top="{TemplateBinding RippleY}" RenderTransformOrigin="0.5 0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="1" ScaleY="1"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>

                        <Border x:Name="ContentBorder" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderGradient}" Background="{x:Null}" Panel.ZIndex="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </tpf:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRippleOnTop" Value="True">
                            <Setter TargetName="RippleCanvas" Property="Panel.ZIndex" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Ripple" Property="Fill" Value="{Binding PressedGradient, RelativeSource={RelativeSource AncestorType=tpf:FluentControl}}"/>
                        </Trigger>
                        <Trigger Property="FluentEffectMode" Value="Glow">
                            <Setter TargetName="PART_Ripple" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="tpf:FluentControl" BasedOn="{StaticResource TPF.FluentControlStyle}"/>
</ResourceDictionary>