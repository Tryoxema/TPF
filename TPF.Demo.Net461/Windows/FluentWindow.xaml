<tpf:ChromelessWindow x:Class="TPF.Demo.Net461.Windows.FluentWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:tpf="http://schemas.tpf.com/xaml/presentation"
                      DataContext="{Binding RelativeSource={RelativeSource Self}}"
                      mc:Ignorable="d"
                      Title="Fluent Buttons" 
                      Height="250" Width="400">
    <Grid tpf:MouseTracker.IsEnabled="True" Background="Transparent">
        <Grid.Resources>
            <Style TargetType="Button" x:Key="FluentButtonStyle">
                <Setter Property="Foreground" Value="{tpf:ResourceLink Key=TextBrush}"/>
                <Setter Property="Background" Value="#19000000"/>
                <Setter Property="BorderBrush" Value="#19000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <tpf:SimplePanel>
                                <Border Name="BorderVisual" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                                <tpf:FluentControl SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Name="Content" RecognizesAccessKey="True" Focusable="False" TextElement.Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </tpf:FluentControl>
                            </tpf:SimplePanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="RevealButtonStyle">
                <Setter Property="Foreground" Value="{tpf:ResourceLink Key=TextBrush}"/>
                <Setter Property="Background" Value="#19000000"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <tpf:SimplePanel>
                                <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"/>
                                <tpf:FluentControl SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="0">
                                    <ContentPresenter Focusable="False" TextElement.Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </tpf:FluentControl>
                                <Border IsHitTestVisible="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    OpacityMask="{tpf:RevealBrush Color=White, Size=70, Opacity=0.3}"/>
                            </tpf:SimplePanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Margin="5 5 0 0">
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
            <Button Content="Button" Style="{StaticResource FluentButtonStyle}" HorizontalAlignment="Left" Height="30" Width="50"/>
        </StackPanel>

        <tpf:UniformGrid Grid.Column="1">
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
            <Button Margin="5" Content="Button" Style="{StaticResource RevealButtonStyle}"/>
        </tpf:UniformGrid>
    </Grid>
</tpf:ChromelessWindow>
