<tpf:ChromelessWindow x:Class="TPF.Demo.Net461.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:tpf="http://schemas.tpf.com/xaml/presentation"
                      xmlns:views="clr-namespace:TPF.Demo.Net461.Views"
                      DataContext="{Binding RelativeSource={RelativeSource Self}}"
                      Closing="Window_Closing"
                      mc:Ignorable="d"
                      Title="MainWindow" 
                      Height="640" Width="1020">
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <tpf:TabControl Grid.Row="0" ShowDropDownButton="True">
            <tpf:TabItem Header="Start">
                <Grid Margin="5">
                    <TextBlock Text="TPF Demo" Foreground="{tpf:ResourceLink Key=TextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="32"/>
                </Grid>
            </tpf:TabItem>

            <tpf:TabItem Header="Skin">
                <views:SkinDemoView/>
            </tpf:TabItem>

            <tpf:TabItem Header="Dev-Bereich">
                <Grid Margin="5" Background="Transparent" tpf:MouseTracker.IsEnabled="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="120"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--<Rectangle Grid.RowSpan="2" OpacityMask="{tpf:RevealBrush Color=White, Size=80, Opacity=1}" Fill="{StaticResource HexBrush}"/>-->

                    <!--Path-Spielplatz-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <tpf:Divider Content="Path 1" HorizontalContentAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                        <Path Stroke="{tpf:ResourceLink Key=GlyphBrush}" Fill="{tpf:ResourceLink Key=GlyphBrush}" Height="36" Width="36" Stretch="Uniform" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1"
                              Data="M14,3 V5 H17.59 L7.76,14.83 L9.17,16.24 L19,6.41 V10 H21 V3 M19,19 H5 V5 H12 V3 H3 V21 H21 V12 H19 V19 z"/>

                        <tpf:Divider Content="Path 2" HorizontalContentAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                        <Path Stroke="{tpf:ResourceLink Key=GlyphBrush}" Fill="{tpf:ResourceLink Key=GlyphBrush}" Height="36" Width="36" Stretch="Uniform" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1"
                              Data="M0,0 H4 V4 H0 z M6,0 H10 V4 H6 z M0,6 H4 V10 H0 z M6,6 H10 V10 H6 z"/>

                        <tpf:Divider Content="Path 3" HorizontalContentAlignment="Center" Grid.Column="2" Grid.Row="0"/>
                        <Path Stroke="{tpf:ResourceLink Key=GlyphBrush}" Fill="{tpf:ResourceLink Key=GlyphBrush}" Height="36" Width="36" Stretch="Uniform" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1"
                              Data="M5,20 H10 V14 H14 V20 H19 V12 H22 L12,3 2,12 H5 V20 z"/>
                    </Grid>

                    <tpf:Divider Content="Neuestes Control" HorizontalContentAlignment="Center" Grid.Row="1"/>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!--<tpf:Banner Grid.Column="0" Height="30" Margin="10 0" BorderThickness="1" CornerRadius="4" IsRunning="True" Direction="RightToLeft" Speed="100">
                            <TextBlock Text="Das Banner ist ein Control zum animieren von Content der in eine bestimmte Richtung läuft" VerticalAlignment="Center"/>
                        </tpf:Banner>-->

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel>
                                <TextBlock Text="Start:"/>
                                <TextBlock Text="End:"/>
                                <TextBlock Text="VisibleStart:"/>
                                <TextBlock Text="VisibleEnd:"/>
                                <TextBlock Text="SelectedStart:"/>
                                <TextBlock Text="SelectedEnd:"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1">
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=Start}"/>
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=End}"/>
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=VisibleStart}"/>
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=VisibleEnd}"/>
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=SelectedStart}"/>
                                <TextBlock Text="{Binding ElementName=DateTimeRangeNavigator, Path=SelectedEnd}"/>
                            </StackPanel>
                        </Grid>
                        <StackPanel>
                            
                        </StackPanel>
                        <tpf:DateTimeRangeNavigator x:Name="DateTimeRangeNavigator" Grid.ColumnSpan="2" Height="100" ContentOverlayBrush="#33000000"
                                                    Start="01.01.2023" End="12.31.2023"
                                                    MinimumZoomRange="10.00:00:00" MaximumZoomRange="100.00:00:00"
                                                    MinimumSelectionRange="1.00:00:00">
                            <tpf:DateTimeRangeNavigator.Intervals>
                                <tpf:YearInterval/>
                                <tpf:QuarterInterval QuarterString="Quartal"/>
                                <tpf:MonthInterval/>
                                <tpf:WeekInterval WeekString="Woche"/>
                                <tpf:DayInterval/>
                                <tpf:HourInterval/>
                            </tpf:DateTimeRangeNavigator.Intervals>
                            <TextBlock Text="Hier könnte ihre Werbung stehen" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </tpf:DateTimeRangeNavigator>
                    </Grid>
                </Grid>
            </tpf:TabItem>

            <tpf:TabItem Header="Color-Editor">
                <Grid Margin="5">
                    <tpf:ColorEditor/>
                </Grid>
            </tpf:TabItem>

            <tpf:TabItem Header="HamburgerMenu">
                <Grid>
                    <tpf:HamburgerMenu MenuHeader="Menü">
                        <tpf:HamburgerMenu.Resources>
                            <DataTemplate x:Key="IconTemplate">
                                <Path Data="{Binding}" Stretch="Uniform" Width="16" Height="16"
                                      Fill="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=(TextElement.Foreground)}" 
                                      Stroke="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=(TextElement.Foreground)}"/>
                            </DataTemplate>
                        </tpf:HamburgerMenu.Resources>
                        <tpf:HamburgerMenuItem Label="_Buttons" Icon="{StaticResource ButtonGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:ButtonsView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="_Rating" Icon="{StaticResource StarGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:RatingView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="_Cards" Icon="{StaticResource VerticalMenuGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:CardsView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="_PasswordBox" Icon="{StaticResource EyeOpenGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:PasswordBoxView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="_SearchTextBox" Icon="{StaticResource SearchGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:SearchTextBoxView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="Calendar" Icon="{StaticResource CalendarGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:CalendarView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="Clock" Icon="{StaticResource ClockGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:ClockView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="Step_ProgressBar" Icon="{StaticResource CheckGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:StepProgressBarView/>
                        </tpf:HamburgerMenuItem>
                        <tpf:HamburgerMenuItem Label="ProgressBar" Icon="{StaticResource ProgressBarGlyph}" IconTemplate="{StaticResource IconTemplate}">
                            <views:ProgressBarView/>
                        </tpf:HamburgerMenuItem>
                    </tpf:HamburgerMenu>
                </Grid>
            </tpf:TabItem>

            <tpf:TabItem Header="TaskBoard">
                <views:TaskBoardView Margin="1"/>
            </tpf:TabItem>

            <tpf:TabItem Header="Dashboard">
                <tpf:SimplePanel>
                    <views:DashboardView/>
                </tpf:SimplePanel>
            </tpf:TabItem>

            <tpf:TabItem Header="DragDrop">
                <views:DragDropView/>
            </tpf:TabItem>
            <tpf:TabItem Header="Comparer">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <tpf:Comparer Grid.Column="0">
                        <tpf:Comparer.FirstContent>
                            <Border Background="ForestGreen" Height="40" Width="200" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </tpf:Comparer.FirstContent>
                        <tpf:Comparer.SecondContent>
                            <Border Background="Crimson" Height="40" Width="200" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </tpf:Comparer.SecondContent>
                    </tpf:Comparer>

                    <tpf:Comparer Grid.Column="1" Orientation="Vertical">
                        <tpf:Comparer.FirstContent>
                            <Border Background="ForestGreen" Height="40" Width="200" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </tpf:Comparer.FirstContent>
                        <tpf:Comparer.SecondContent>
                            <Border Background="Crimson" Height="40" Width="200" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </tpf:Comparer.SecondContent>
                    </tpf:Comparer>
                </Grid>
            </tpf:TabItem>
        </tpf:TabControl>

        <tpf:NotificationContainer x:Name="Notifications" Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="400"/>

        <StatusBar Grid.Row="1" Background="{tpf:ResourceLink Key=ApplicationBackground}" BorderBrush="{tpf:ResourceLink Key=BorderBrush}" BorderThickness="0 1 0 0">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Skin: " VerticalAlignment="Center" Foreground="{tpf:ResourceLink Key=TextBrush}"/>
                    <tpf:ComboBox x:Name="DesignComboBox" Width="150" ItemsSource="{Binding Skins}" SelectedValuePath="Skin" DisplayMemberPath="Name" SelectionChanged="DesignComboBox_SelectionChanged"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <tpf:SearchTextBox Width="200" Searching="SearchTextBox_Searching" ItemSelected="SearchTextBox_ItemSelected" SearchPath="DisplayName"
                                   DropDownDirection="Top" ClearAfterSelection="True" SearchMode="Event" NoResultsContent="Kein Ergebnis">
                    <tpf:SearchTextBox.ItemTemplate>
                        <DataTemplate>
                            <tpf:HighlightingTextBlock Text="{Binding DisplayName}" IgnoreCase="True" HighlightText="{Binding Value, RelativeSource={RelativeSource AncestorType=tpf:SearchTextBox}}"
                                                       Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"/>
                        </DataTemplate>
                    </tpf:SearchTextBox.ItemTemplate>
                </tpf:SearchTextBox>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <tpf:Button Content="Empfangen" Margin="0 0 5 0" Click="ReceiveButton_Click" tpf:Poptip.Content="Empfängt eine zufällige Zahl an Nachrichten"/>
                    <tpf:Button Content="Lesen" Click="ReadButton_Click">
                        <tpf:Badge.Instance>
                            <tpf:Badge Content="{Binding BadgeCounter}" Visibility="{Binding BadgeVisibility}"/>
                        </tpf:Badge.Instance>
                    </tpf:Button>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <tpf:Shield Label="Dev" Content="0.6.8" Margin="0 0 5 0" tpf:Poptip.Content="Aktuelle Entwicklungs-Version"/>
                    <tpf:Shield Label="Release" Content="0.6.7" Margin="0 0 5 0" tpf:Poptip.Content="Aktuelle Release-Version"/>
                    <tpf:Shield Label="Skins" Content="4" Background="Orange">
                        <tpf:Poptip.Instance>
                            <tpf:Poptip Placement="BottomLeft" Offset="0">
                                <tpf:Poptip.Content>
                                    <StackPanel>
                                        <TextBlock Text="VS2013 Hell"/>
                                        <TextBlock Text="VS2013 Dunkel"/>
                                        <TextBlock Text="Smooth Hell"/>
                                        <TextBlock Text="Smooth Dunkel"/>
                                    </StackPanel>
                                </tpf:Poptip.Content>
                            </tpf:Poptip>
                        </tpf:Poptip.Instance>
                    </tpf:Shield>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <CheckBox Content="Smooth Design?" Checked="SmoothThemeCheckBox_Checked" Unchecked="SmoothThemeCheckBox_Unchecked" x:Name="SmoothThemeCheckBox"/>
            </StatusBarItem>
            <StatusBarItem>

            </StatusBarItem>
        </StatusBar>
    </Grid>
</tpf:ChromelessWindow>